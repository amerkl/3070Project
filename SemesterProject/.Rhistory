JoinedData$district[which(is.na(JoinedData$district))] <- "Unknown"
#COMPLETED SCRIPTS
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date), fill=Outcome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime")
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x=Outcome)) +
geom_bar()+
ggtitle("TotalCrime by LSU Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
ggplot(data=subset(JoinedData, !is.na(Outcome)), mapping = aes(x= crime, fill=Outcome)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Crime Layout for LSU Game Days", "Colored by Game Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
#Crime Layout for LSU Game Day by Outcome (USE)
ggplot(data=subset(JoinedData, is.na(Outcome)), mapping = aes(x= offense_date, y = crime)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Crime Layout for LSU Game Days", "Colored by Game Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
ggplot(data=subset(JoinedData, !is.na(district)), mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime by Type per District","Colored by Outcome")+
xlab("Total Crime")+
ylab("Type of Crime")
ggplot(JoinedData, mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime by Type per District","Colored by Outcome")+
xlab("Total Crime")+
ylab("Type of Crime")
ggplot(data=subset(JoinedData, !is.na(a_c))) +
geom_bar(mapping = aes(x = crime, fill = a_c)) +
ggtitle("Total Crimes for 2018", "Separated by Committed and Attempted") +
theme(axis.text.x = element_text(angle = 90))+
xlab("Crime Type")+
ylab("Total Crime")
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Crime Count by District","Filtered By Crime Type")+
xlab("District Number")+
ylab("Crime Count")
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, crime) %>%
summarise(AverageRate = mean(n)) %>%
ggplot(mapping = aes(x = crime, y = AverageRate)) +
geom_col(fill = 'purple')+
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Daily Crime Count by Type", "Faceted by LSU vs NonLSU Dates") +
xlab("Crime Type") +
ylab("Crime Rate")+
facet_wrap(~Sport)
knitr::opts_chunk$set(echo = FALSE, message = F)
library(knitr)
library(tidyverse)
library(stringr)
library(here)
source(here("01RScripts","DataWrangle.R"))
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, crime) %>%
summarise(AverageRate = mean(n)) %>%
ggplot(mapping = aes(x = crime, y = AverageRate)) +
geom_col(fill = 'purple')+
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Daily Crime Count by Type", "Faceted by LSU vs NonLSU Dates") +
xlab("Crime Type") +
ylab("Crime Rate")+
facet_wrap(~Sport)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
ggplot(data=subset(JoinedData, !is.na(district)), mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime in 2018 by Type","Colored by District")+
xlab("Type of Crime")+
ylab("Total Crime")
ggplot(data=subset(JoinedData, !is.na(Outcome)), mapping = aes(x= crime, fill=Outcome)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Crime Layout for LSU Game Days", "Colored by Game Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, crime) %>%
summarise(AverageRate = mean(n)) %>%
ggplot(mapping = aes(x = crime, y = AverageRate)) +
geom_col(fill = 'purple')+
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Daily Crime Count by Type", "Faceted by LSU vs NonLSU Dates") +
xlab("Crime Type") +
ylab("Crime Rate")+
facet_wrap(~Sport)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
#COMPLETED SCRIPTS
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date), fill=Outcome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime")
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
ggplot(mapping = aes(x = offense_date, y = n)) +
geom_line(color = 'deepskyblue', size = 1)+
ggtitle("Crime Commited Crimes for 2018", "Count committed crimes per Day") +
xlab("Date Committed") +
ylab("Crime Rate")
ggplot(data=subset(JoinedData, !is.na(Outcome)), mapping = aes(x= crime, fill=Outcome)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Crime Layout for LSU Game Days", "Colored by Game Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
#Crime Layout for LSU Game Day by Outcome (USE)
ggplot(data=subset(JoinedData, is.na(Outcome)), mapping = aes(x= offense_date, y = crime)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Crime Layout for LSU Game Days", "Colored by Game Outcome")+
xlab("Crime Type")+
ylab("Total Crime")
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size =1)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size =1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
ggplot(JoinedData, mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime by Type per District","Colored by Outcome")+
xlab("Total Crime")+
ylab("Type of Crime")
ggplot(data=subset(JoinedData, !is.na(a_c))) +
geom_bar(mapping = aes(x = crime, fill = a_c)) +
ggtitle("Total Crimes for 2018", "Separated by Committed and Attempted") +
theme(axis.text.x = element_text(angle = 90))+
xlab("Crime Type")+
ylab("Total Crime")
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Crime Count by District","Filtered By Crime Type")+
xlab("District Number")+
ylab("Crime Count")
ggplot(JoinedData, mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime by Type per District","Colored by Outcome")+
xlab("Total Crime")+
ylab("Type of Crime")
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, crime) %>%
summarise(AverageRate = mean(n)) %>%
ggplot(mapping = aes(x = crime, y = AverageRate)) +
geom_col(fill = 'purple')+
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Daily Crime Count by Type", "Faceted by LSU vs NonLSU Dates") +
xlab("Crime Type") +
ylab("Crime Rate")+
facet_wrap(~Sport)
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, offense_date) %>%
summarise(CrimeRateType = mean(n)) %>%
ggplot(mapping = aes(x = offense_date, y = CrimeRateType)) +
geom_line(color = 'deepskyblue', size = 0.7)+
ggtitle("Crime Rates for 2018", "Count of Crime Types per Day") +
xlab("Date Committed") +
ylab("Crime Rate")
library(RSocrata)
library(tidyverse)
token <- "NDto4CJ4JBrcMyuBGCp4NiXs5"
OriginalData <- read.socrata("https://data.brla.gov/resource/5rji-ddnu.json", app_token = token)
library(RSocrata)
library(tidyverse)
token <- "NDto4CJ4JBrcMyuBGCp4NiXs5"
OriginalData <- read.socrata("https://data.brla.gov/resource/5rji-ddnu.json", app_token = token)
OriginalData %>%
select('offense_date', 'crime', 'a_c', 'district') -> AllCrime
AllCrime %>%
filter(str_detect(offense_date, "2018")) %>%
mutate(offense_date = lubridate::ymd(offense_date)) -> BRCrime
#LSUFootball Upload
LSUFootball <- read_csv(here::here("Data","2018LSUFootballSchedule.csv"),
col_types = cols(Date = col_date(format = "%m/%d/%Y"),
EndTime = col_skip(), GameAttendance = col_number(),
LSUPoints = col_number(), OpponentPoints = col_number(),
SpecialEvent = col_logical(), StartTime = col_skip()))
#full join for datasets
full_join(BRCrime, LSUFootball, by = c("offense_date" = "Date")) -> JoinedData
#cleaning NAs for Gameday Graphs
JoinedData$Sport[which(is.na(JoinedData$Sport))] <- "Non Gameday"
#cleaning unknowns for crime graphs for crimes with purposefully unreported locations
JoinedData$district[which(is.na(JoinedData$district))] <- "Unknown"
library(flexdashboard)
library(shiny)
library(htmlwidgets)
library(dygraphs)
library(tidyverse)
library(dplyr)
library(plotly)
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, offense_date) %>%
summarise(CrimeRateType = mean(n))
count(JoinedData, offense_date, crime) %>%
group_by(offense_date) %>%
summarise(CrimeRateType = mean(n)
count(JoinedData, offense_date, crime) %>%
group_by(offense_date) %>%
summarise(CrimeRateType = mean(n))
count(JoinedData, offense_date, crime) %>%
group_by(offense_date)
count(JoinedData, offense_date) %>%
group_by(offense_date)
count(JoinedData, offense_date) %>%
group_by(offense_date) -> CrimesPerDay
count(JoinedData, offense_date) %>%
group_by(offense_date) -> CrimesPerDay
valueBox(CrimesPerDay, icon = "fa-handcuff")
valueBox(CrimesPerDay, icon = "fa-pencil")
count(JoinedData, offense_date) %>%
group_by(offense_date) -> CrimesPerDay
DT::datatable(CrimesPerDay, options = list(
pageLength = 15
))
install.packages("DT")
library(DT)
DT::datatable(CrimesPerDay, options = list(
pageLength = 15
))
plot_ly(data = CrimesPerDay, x = ~crime, y= ~n, height = 750)
plot_ly(data = JoinedData, x = ~crime, height = 750)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
plot_ly(x = ~offense_date, y = ~n)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
plot_ly(x = ~offense_date, y = ~n, type = 'scatter', mode = 'lines')
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
plot_ly(x = ~offense_date, y = ~n, type = 'scatter', mode = 'lines') %>%
layout(title = "Daily Crimes for 2018",
xaxis = list(title = "Months"),
yaxis = list (title = "Total Crimes"))
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome)
plot_ly(data = subset(JoinedData, !is.na(LSUPoints)), x = ~Opponent, type = 'bar')
plot_ly(data = subset(JoinedData, !is.na(LSUPoints)), x = ~Opponent, type = 'column')
plot_ly(data = subset(JoinedData, !is.na(LSUPoints)), x = ~Opponent, type = 'bar') %>%
layout(yaxis = list(title = 'Total Crimes'), barmode = 'stack')
data = subset(JoinedData, !is.na(LSUPoints))
data
count(offense_date) %>%
group_by(Sport)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
LSUGameData = subset(JoinedData, !is.na(LSUPoints))
count(JoinedData, offense_date, Sport) %>%
group_by(Sport)
count(JoinedData, offense_date) %>%
group_by(offense_date)
count(JoinedData, offense_date) %>%
group_by(offense_date) %>%
plot_ly(x = ~offense_date, y = ~n, type = 'scatter', mode = 'lines') %>%
layout(title = "Daily Crimes for 2018",
xaxis = list(title = "Months"),
yaxis = list (title = "Total Crimes"))
count(JoinedData, offense_date) %>%
group_by(offense_date) %>%
plot_ly(x = ~offense_date, y = ~n, type = 'scatter', mode = 'lines') %>%
layout(title = "Daily Crimes for 2018",
xaxis = list(title = "Months"),
yaxis = list (title = "Total Crimes"))
count(JoinedData, offense_date) %>%
group_by(offense_date)
count(JoinedData, offense_date, Sport) %>%
group_by(offense_date, Sport) %>%
plot_ly(x = ~offense_date, y = ~n, type = 'scatter', mode = 'lines') %>%
layout(title = "Daily Crimes for 2018",
xaxis = list(title = "Months"),
yaxis = list (title = "Total Crimes"))
count(JoinedData, offense_date, Sport) %>%
group_by(Sport)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) -> DailyCountBySport
plot_ly(data = subset(DailyCountBySport, !is.na(LSUPoints)), x = ~Opponent, type = 'bar')
plot_ly(data = subset(DailyCountBySport, Sport="Gameday" ), x = ~Opponent, type = 'bar')
count(JoinedData, offense_date, Sport, Opponent) %>%
group_by(Sport) -> DailyCountBySport
DailyCountBySport
plot_ly(data = subset(DailyCountBySport, !is.na(Opponent)), x = ~Opponent, type = 'bar')
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date), fill=Outcome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime")
count(JoinedData, offense_date, Sport, Opponent) %>%
group_by(Sport)
plot_ly(data = subset(DailyCountBySport, !is.na(Opponent)), x = ~Opponent, y = ~n, type = 'bar')
count(JoinedData, offense_date, Sport, Opponent, Outcome) %>%
group_by(Sport)
plot_ly(data = subset(DailyCountBySport, !is.na(Opponent)), x = ~Opponent, y = ~n, type = 'bar', color = Outcome)
count(JoinedData, offense_date, Sport, Opponent, Outcome) %>%
group_by(Sport) -> DailyCountBySport
plot_ly(data = subset(DailyCountBySport, !is.na(Opponent)), x = ~Opponent, y = ~n, type = 'bar', color = Outcome)
count(JoinedData, offense_date, Sport, Opponent, Outcome) %>%
group_by(Sport) -> DailyCountBySport
DailyCountBySport
plot_ly(data = subset(DailyCountBySport, !is.na(Outcome)), x = ~Opponent, y = ~n, type = 'bar', color = Outcome)
plot_ly(data = subset(DailyCountBySport, !is.na(Outcome)), x = ~Opponent, y = ~n, type = 'bar', color = 'Outcome')
plot_ly(data = subset(DailyCountBySport, !is.na(Opponent)), x = ~Opponent, y = ~n, type = 'bar', color = 'Outcome')
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date))) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime") ->CrimeByOpponent
ggplotly(CrimesByOpponent)
ggplotly(CrimeByOpponent)
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date))) +
geom_bar(fill = Outcome)+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime") ->CrimeByOpponent
ggplot(data=subset(JoinedData, !is.na(LSUPoints)
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date))) +
ggplot(data=subset(JoinedData, !is.na(LSUPoints)), mapping = aes(x= reorder(Opponent, offense_date), fill=Outcome)) +
geom_bar()+
theme(axis.text.x = element_text(angle = 45))+
ggtitle("Count of Crimes by LSU Opponents", "In Order of LSU 2018 Season")+
geom_hline(yintercept = 125, color = 'gold', size = 1)+
xlab("Opponent Universities")+
ylab("Total Crime") -> CrimeByOpponent
ggplotly(CrimeByOpponent)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
ggplot(mapping = aes(x = offense_date, y = n)) +
geom_line(color = 'purple', size = 1)+
ggtitle("Crimes for 2018", "Count of Crimes per Day in 2018") +
xlab("Date Committed") +
ylab("Crime count") +
geom_hline(yintercept = 125, color = 'gold', size = 1) -> DailyCrimefor2018
ggplotly(DailyCrimefor2018)
count(JoinedData, offense_date, Sport) %>%
group_by(Sport) %>%
ggplot(mapping = aes(x = offense_date, y = n)) +
geom_line(color = 'purple', size = 1)+
ggtitle("Crimes for 2018", "Count of Crimes per Day in 2018") +
xlab("Date Committed") +
ylab("Total Crimes") +
geom_hline(yintercept = 125, color = 'gold', size = 1) -> DailyCrimefor2018
ggplotly(DailyCrimefor2018)
ggplot(data = LSUFootball, mapping = aes(x = GameAttendance, y = LSUPoints)) +
geom_point(size = 4, position = "jitter",color = 'purple') +
ggtitle("LSU Points Scored by Game Attendance", "Colored by Outcome")+
geom_hline(yintercept = 33, color = 'gold', size = 1)+
geom_vline(xintercept = 90340, color = 'gold', size = 1)+
xlab("Attendance")+
ylab("LSU Points Scored")+
scale_x_continuous(labels = scales::comma)+
theme(axis.text.x = element_text(angle = 90))+
facet_wrap(~Outcome) -> AudienceOutcome
ggplotly(AudienceOutcome)
ggplotly(AudienceOutcome)
count(JoinedData, offense_date, Sport, crime) %>%
group_by(Sport, crime) %>%
summarise(AverageRate = mean(n)) %>%
ggplot(mapping = aes(x = crime, y = AverageRate)) +
geom_col(fill = 'purple')+
theme(axis.text.x = element_text(angle = 90))+
ggtitle("Daily Crime Count by Type", "Faceted by LSU vs NonLSU Dates") +
xlab("Crime Type") +
ylab("Crime Rate")+
facet_wrap(~Sport) -> GamedayvsNonGameday
ggplotly(GamedayvsNonGameday)
ggplotly(DailyCrimefor2018) %>%
JoinedData %>% filter(!! rlang::sym(input$FilterColumn))== input$FilterValue)
selectInput("FilterColumn", "Filter Column", choices = names(JoinedData))
textInput("FilterValue", "Filter Value")
JoinedData %>%
filter(!! rlang::sym(input$FilterColumn))== input$FilterValue)
JoinedData %>%
filter(!! rlang::sym(input$FilterColumn))== input$FilterValue
ggplot(JoinedData, mapping = aes(x=crime, fill=district)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle("Total Crime by Type per District","Colored by Outcome")+
xlab("Total Crime")+
ylab("Type of Crime")
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Crime Count by District","Filtered By Crime Type")+
xlab("District Number")+
ylab("Crime Count")
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Crime Count by District","Filtered By Crime Type")+
xlab("District Number")+
ylab("Crime Count") -> DistrictCrimes
ggplotly(DistrictCrimes)
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Total Crimes by District for 2018")+
xlab("District Number")+
ylab("Total Crime") -> DistrictCrimes
ggplotly(DistrictCrimes)
#cleaning unknowns for crime graphs for crimes with purposefully unreported locations
JoinedData$district[which(is.na(JoinedData$district))] <- "Unknown"
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Total Crimes by District for 2018")+
xlab("District Number")+
ylab("Total Crime") -> DistrictCrimes
ggplotly(DistrictCrimes)
write.csv(JoinedData)
write.csv(JoinedData, "JoinedDataTest.csv")
write_csv(JoinedData, path = "JoinedDataTest.csv")
#cleaning NAs for Gameday Graphs
JoinedData$Sport[which(is.na(JoinedData$Sport))] <- "Non Gameday"
#cleaning unknowns for crime graphs for crimes with purposefully unreported locations
JoinedData$district[which(is.na(JoinedData$district))] <- "Unknown"
ggplot(data=JoinedData, mapping = aes(x=district, fill = district)) +
geom_bar()+
ggtitle("Total Crimes by District for 2018")+
xlab("District Number")+
ylab("Total Crime") -> DistrictCrimes
ggplotly(DistrictCrimes)
knitr::opts_chunk$set(echo = FALSE, message = F)
library(knitr)
library(tidyverse)
library(stringr)
library(here)
source(here("01RScripts","DataWrangle.R"))
